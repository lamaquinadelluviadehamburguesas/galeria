{"ast":null,"code":"import _objectSpread from \"F:/7edf24d0-a52d-4569-984b-9dc4f8b4f576/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"F:\\\\7edf24d0-a52d-4569-984b-9dc4f8b4f576\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport useMeasure from 'react-use-measure';\nimport { useTransition, a } from '@react-spring/web';\nimport { shuffle } from 'lodash';\nimport useMedia from './useMedia';\nimport data from './data';\nimport styles from './styles.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Masonry(_ref) {\n  _s();\n  let {\n    onSelectImage,\n    isOverlayActive\n  } = _ref;\n  // Hook1: Tie media queries to the number of columns\n  const columns = useMedia(['(min-width: 1500px)', '(min-width: 1000px)', '(min-width: 600px)'], [5, 4, 3], 2);\n  // Hook2: Measure the width of the container element\n  const [ref, {\n    width\n  }] = useMeasure();\n  // Hook3: Hold items\n  const [items, set] = useState(data);\n  const [hoveredItemKey, setHoveredItemKey] = useState(null);\n  // Hook4: shuffle data every 2 seconds\n  useEffect(() => {\n    let t;\n    if (!isOverlayActive) {\n      t = setInterval(() => set(shuffle), 2000);\n    }\n    return () => {\n      if (t) clearInterval(t);\n    };\n  }, [isOverlayActive]);\n  // Hook5: Form a grid of stacked items using width & columns we got from hooks 1 & 2\n  const [heights, gridItems] = useMemo(() => {\n    let heights = new Array(columns).fill(0); // Each column gets a height starting with zero\n    let gridItems = items.map((child, i) => {\n      const column = heights.indexOf(Math.min(...heights)); // Basic masonry-grid placing, puts tile into the smallest column using Math.min\n      const x = width / columns * column; // x = container width / number of columns * column index,\n      const y = (heights[column] += child.height / 2) - child.height / 2; // y = it's just the height of the current column\n      return _objectSpread(_objectSpread({}, child), {}, {\n        x,\n        y,\n        width: width / columns,\n        height: child.height / 2\n      });\n    });\n    return [heights, gridItems];\n  }, [columns, items, width]);\n  // Hook6: Turn the static grid values into animated transitions, any addition, removal or change will be animated\n  const transitions = useTransition(gridItems, {\n    key: item => item.css,\n    from: _ref2 => {\n      let {\n        x,\n        y,\n        width,\n        height\n      } = _ref2;\n      return {\n        x,\n        y,\n        width,\n        height,\n        opacity: 0\n      };\n    },\n    enter: _ref3 => {\n      let {\n        x,\n        y,\n        width,\n        height\n      } = _ref3;\n      return {\n        x,\n        y,\n        width,\n        height,\n        opacity: 1\n      };\n    },\n    update: (animatedProps, item) => ({\n      x: animatedProps.x,\n      y: animatedProps.y,\n      width: item.css === hoveredItemKey ? animatedProps.width * 1.1 : animatedProps.width,\n      height: item.css === hoveredItemKey ? animatedProps.height * 1.1 : animatedProps.height\n    }),\n    leave: {\n      height: 0,\n      opacity: 0\n    },\n    config: {\n      mass: 5,\n      tension: 500,\n      friction: 100\n    },\n    trail: 25\n  });\n  // Render the grid\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: styles.list,\n    style: {\n      height: Math.max(...heights),\n      opacity: isOverlayActive ? 0.3 : 1 // Opacidad condicional\n    },\n    children: transitions((style, item) => /*#__PURE__*/_jsxDEV(a.div, {\n      style: style,\n      onMouseEnter: () => setHoveredItemKey(item.css),\n      onMouseLeave: () => setHoveredItemKey(null),\n      onClick: () => onSelectImage(item),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundImage: \"url(\".concat(item.css, \")\")\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Masonry, \"21VW3boY4c+Ir3fq96mv+z0kAuY=\", false, function () {\n  return [useMedia, useMeasure, useTransition];\n});\n_c = Masonry;\nexport default function App() {\n  _s2();\n  const [selectedImage, setSelectedImage] = useState(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Masonry, {\n      onSelectImage: setSelectedImage,\n      isOverlayActive: !!selectedImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 1000\n      },\n      onClick: () => setSelectedImage(null),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedImage.css,\n        alt: \"Ampliada\",\n        style: {\n          maxWidth: '90%',\n          maxHeight: '90%',\n          objectFit: 'contain'\n        },\n        onClick: e => e.stopPropagation() // Evita que el clic en la imagen cierre el overlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s2(App, \"gNHFCSJ3h3sH8HFrpxN7hUqoxHs=\");\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Masonry\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useMeasure","useTransition","a","shuffle","useMedia","data","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Masonry","_ref","_s","onSelectImage","isOverlayActive","columns","ref","width","items","set","hoveredItemKey","setHoveredItemKey","t","setInterval","clearInterval","heights","gridItems","Array","fill","map","child","i","column","indexOf","Math","min","x","y","height","_objectSpread","transitions","key","item","css","from","_ref2","opacity","enter","_ref3","update","animatedProps","leave","config","mass","tension","friction","trail","className","list","style","max","children","div","onMouseEnter","onMouseLeave","onClick","backgroundImage","concat","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s2","selectedImage","setSelectedImage","position","top","left","backgroundColor","display","justifyContent","alignItems","zIndex","src","alt","maxWidth","maxHeight","objectFit","e","stopPropagation","_c2","$RefreshReg$"],"sources":["F:/7edf24d0-a52d-4569-984b-9dc4f8b4f576/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\nimport useMeasure from 'react-use-measure'\nimport { useTransition, a } from '@react-spring/web'\nimport { shuffle } from 'lodash'\n\nimport useMedia from './useMedia'\nimport data from './data'\n\nimport styles from './styles.module.css'\n\ninterface ImageItem {\n  css: string;\n  height: number;\n}\n\ninterface MasonryProps {\n  onSelectImage: (image: ImageItem | null) => void;\n  isOverlayActive: boolean; // Nueva prop\n}\n\nfunction Masonry({ onSelectImage, isOverlayActive }: MasonryProps) {\n  // Hook1: Tie media queries to the number of columns\n  const columns = useMedia(['(min-width: 1500px)', '(min-width: 1000px)', '(min-width: 600px)'], [5, 4, 3], 2)\n  // Hook2: Measure the width of the container element\n  const [ref, { width }] = useMeasure()\n  // Hook3: Hold items\n  const [items, set] = useState(data)\n  const [hoveredItemKey, setHoveredItemKey] = useState<string | null>(null);\n  // Hook4: shuffle data every 2 seconds\n  useEffect(() => {\n    let t: number | undefined;\n    if (!isOverlayActive) {\n      t = setInterval(() => set(shuffle), 2000);\n    }\n    return () => {\n      if (t) clearInterval(t as any);\n    };\n  }, [isOverlayActive]);\n  // Hook5: Form a grid of stacked items using width & columns we got from hooks 1 & 2\n  const [heights, gridItems] = useMemo(() => {\n    let heights = new Array(columns).fill(0) // Each column gets a height starting with zero\n    let gridItems = items.map((child, i) => {\n      const column = heights.indexOf(Math.min(...heights)) // Basic masonry-grid placing, puts tile into the smallest column using Math.min\n      const x = (width / columns) * column // x = container width / number of columns * column index,\n      const y = (heights[column] += child.height / 2) - child.height / 2 // y = it's just the height of the current column\n      return { ...child, x, y, width: width / columns, height: child.height / 2 }\n    })\n    return [heights, gridItems]\n  }, [columns, items, width])\n  // Hook6: Turn the static grid values into animated transitions, any addition, removal or change will be animated\n  const transitions = useTransition(gridItems, {\n    key: (item: { css: string; height: number }) => item.css,\n    from: ({ x, y, width, height }) => ({ x, y, width, height, opacity: 0 }),\n    enter: ({ x, y, width, height }) => ({ x, y, width, height, opacity: 1 }),\n    update: (animatedProps: { x: number, y: number, width: number, height: number, opacity: number }, item: { css: string; height: number }) => ({\n      x: animatedProps.x,\n      y: animatedProps.y,\n      width: item.css === hoveredItemKey ? animatedProps.width * 1.1 : animatedProps.width,\n      height: item.css === hoveredItemKey ? animatedProps.height * 1.1 : animatedProps.height,\n    }),\n    leave: { height: 0, opacity: 0 },\n    config: { mass: 5, tension: 500, friction: 100 },\n    trail: 25,\n  })\n  // Render the grid\n  return (\n    <div\n      ref={ref}\n      className={styles.list}\n      style={{\n        height: Math.max(...heights),\n        opacity: isOverlayActive ? 0.3 : 1, // Opacidad condicional\n      }}\n    >\n      {transitions((style, item) => (\n        <a.div\n          style={style}\n          onMouseEnter={() => setHoveredItemKey(item.css)}\n          onMouseLeave={() => setHoveredItemKey(null)}\n          onClick={() => onSelectImage(item)}\n        >\n          <div style={{ backgroundImage: `url(${item.css})` }} />\n        </a.div>\n      ))}\n    </div>\n  )\n}\n\nexport default function App() {\n  const [selectedImage, setSelectedImage] = useState<ImageItem | null>(null);\n\n  return (\n    <>\n      <Masonry onSelectImage={setSelectedImage} isOverlayActive={!!selectedImage} />\n      {selectedImage && (\n        <div\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            backgroundColor: 'rgba(0, 0, 0, 0.8)',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            zIndex: 1000,\n          }}\n          onClick={() => setSelectedImage(null)}\n        >\n          <img\n            src={selectedImage.css}\n            alt=\"Ampliada\"\n            style={{\n              maxWidth: '90%',\n              maxHeight: '90%',\n              objectFit: 'contain',\n            }}\n            onClick={e => e.stopPropagation()} // Evita que el clic en la imagen cierre el overlay\n          />\n        </div>\n      )}\n    </>\n  )\n}\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,SAASC,aAAa,EAAEC,CAAC,QAAQ,mBAAmB;AACpD,SAASC,OAAO,QAAQ,QAAQ;AAEhC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,IAAI,MAAM,QAAQ;AAEzB,OAAOC,MAAM,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAYxC,SAASC,OAAOA,CAAAC,IAAA,EAAmD;EAAAC,EAAA;EAAA,IAAlD;IAAEC,aAAa;IAAEC;EAA8B,CAAC,GAAAH,IAAA;EAC/D;EACA,MAAMI,OAAO,GAAGZ,QAAQ,CAAC,CAAC,qBAAqB,EAAE,qBAAqB,EAAE,oBAAoB,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5G;EACA,MAAM,CAACa,GAAG,EAAE;IAAEC;EAAM,CAAC,CAAC,GAAGlB,UAAU,CAAC,CAAC;EACrC;EACA,MAAM,CAACmB,KAAK,EAAEC,GAAG,CAAC,GAAGvB,QAAQ,CAACQ,IAAI,CAAC;EACnC,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAgB,IAAI,CAAC;EACzE;EACAC,SAAS,CAAC,MAAM;IACd,IAAIyB,CAAqB;IACzB,IAAI,CAACR,eAAe,EAAE;MACpBQ,CAAC,GAAGC,WAAW,CAAC,MAAMJ,GAAG,CAACjB,OAAO,CAAC,EAAE,IAAI,CAAC;IAC3C;IACA,OAAO,MAAM;MACX,IAAIoB,CAAC,EAAEE,aAAa,CAACF,CAAQ,CAAC;IAChC,CAAC;EACH,CAAC,EAAE,CAACR,eAAe,CAAC,CAAC;EACrB;EACA,MAAM,CAACW,OAAO,EAAEC,SAAS,CAAC,GAAG5B,OAAO,CAAC,MAAM;IACzC,IAAI2B,OAAO,GAAG,IAAIE,KAAK,CAACZ,OAAO,CAAC,CAACa,IAAI,CAAC,CAAC,CAAC,EAAC;IACzC,IAAIF,SAAS,GAAGR,KAAK,CAACW,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;MACtC,MAAMC,MAAM,GAAGP,OAAO,CAACQ,OAAO,CAACC,IAAI,CAACC,GAAG,CAAC,GAAGV,OAAO,CAAC,CAAC,EAAC;MACrD,MAAMW,CAAC,GAAInB,KAAK,GAAGF,OAAO,GAAIiB,MAAM,EAAC;MACrC,MAAMK,CAAC,GAAG,CAACZ,OAAO,CAACO,MAAM,CAAC,IAAIF,KAAK,CAACQ,MAAM,GAAG,CAAC,IAAIR,KAAK,CAACQ,MAAM,GAAG,CAAC,EAAC;MACnE,OAAAC,aAAA,CAAAA,aAAA,KAAYT,KAAK;QAAEM,CAAC;QAAEC,CAAC;QAAEpB,KAAK,EAAEA,KAAK,GAAGF,OAAO;QAAEuB,MAAM,EAAER,KAAK,CAACQ,MAAM,GAAG;MAAC;IAC3E,CAAC,CAAC;IACF,OAAO,CAACb,OAAO,EAAEC,SAAS,CAAC;EAC7B,CAAC,EAAE,CAACX,OAAO,EAAEG,KAAK,EAAED,KAAK,CAAC,CAAC;EAC3B;EACA,MAAMuB,WAAW,GAAGxC,aAAa,CAAC0B,SAAS,EAAE;IAC3Ce,GAAG,EAAGC,IAAqC,IAAKA,IAAI,CAACC,GAAG;IACxDC,IAAI,EAAEC,KAAA;MAAA,IAAC;QAAET,CAAC;QAAEC,CAAC;QAAEpB,KAAK;QAAEqB;MAAO,CAAC,GAAAO,KAAA;MAAA,OAAM;QAAET,CAAC;QAAEC,CAAC;QAAEpB,KAAK;QAAEqB,MAAM;QAAEQ,OAAO,EAAE;MAAE,CAAC;IAAA,CAAC;IACxEC,KAAK,EAAEC,KAAA;MAAA,IAAC;QAAEZ,CAAC;QAAEC,CAAC;QAAEpB,KAAK;QAAEqB;MAAO,CAAC,GAAAU,KAAA;MAAA,OAAM;QAAEZ,CAAC;QAAEC,CAAC;QAAEpB,KAAK;QAAEqB,MAAM;QAAEQ,OAAO,EAAE;MAAE,CAAC;IAAA,CAAC;IACzEG,MAAM,EAAEA,CAACC,aAAuF,EAAER,IAAqC,MAAM;MAC3IN,CAAC,EAAEc,aAAa,CAACd,CAAC;MAClBC,CAAC,EAAEa,aAAa,CAACb,CAAC;MAClBpB,KAAK,EAAEyB,IAAI,CAACC,GAAG,KAAKvB,cAAc,GAAG8B,aAAa,CAACjC,KAAK,GAAG,GAAG,GAAGiC,aAAa,CAACjC,KAAK;MACpFqB,MAAM,EAAEI,IAAI,CAACC,GAAG,KAAKvB,cAAc,GAAG8B,aAAa,CAACZ,MAAM,GAAG,GAAG,GAAGY,aAAa,CAACZ;IACnF,CAAC,CAAC;IACFa,KAAK,EAAE;MAAEb,MAAM,EAAE,CAAC;MAAEQ,OAAO,EAAE;IAAE,CAAC;IAChCM,MAAM,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,OAAO,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAI,CAAC;IAChDC,KAAK,EAAE;EACT,CAAC,CAAC;EACF;EACA,oBACEjD,OAAA;IACES,GAAG,EAAEA,GAAI;IACTyC,SAAS,EAAEpD,MAAM,CAACqD,IAAK;IACvBC,KAAK,EAAE;MACLrB,MAAM,EAAEJ,IAAI,CAAC0B,GAAG,CAAC,GAAGnC,OAAO,CAAC;MAC5BqB,OAAO,EAAEhC,eAAe,GAAG,GAAG,GAAG,CAAC,CAAE;IACtC,CAAE;IAAA+C,QAAA,EAEDrB,WAAW,CAAC,CAACmB,KAAK,EAAEjB,IAAI,kBACvBnC,OAAA,CAACN,CAAC,CAAC6D,GAAG;MACJH,KAAK,EAAEA,KAAM;MACbI,YAAY,EAAEA,CAAA,KAAM1C,iBAAiB,CAACqB,IAAI,CAACC,GAAG,CAAE;MAChDqB,YAAY,EAAEA,CAAA,KAAM3C,iBAAiB,CAAC,IAAI,CAAE;MAC5C4C,OAAO,EAAEA,CAAA,KAAMpD,aAAa,CAAC6B,IAAI,CAAE;MAAAmB,QAAA,eAEnCtD,OAAA;QAAKoD,KAAK,EAAE;UAAEO,eAAe,SAAAC,MAAA,CAASzB,IAAI,CAACC,GAAG;QAAI;MAAE;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC3D,EAAA,CAlEQF,OAAO;EAAA,QAEEP,QAAQ,EAECJ,UAAU,EA0BfC,aAAa;AAAA;AAAAwE,EAAA,GA9B1B9D,OAAO;AAoEhB,eAAe,SAAS+D,GAAGA,CAAA,EAAG;EAAAC,GAAA;EAC5B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGhF,QAAQ,CAAmB,IAAI,CAAC;EAE1E,oBACEW,OAAA,CAAAE,SAAA;IAAAoD,QAAA,gBACEtD,OAAA,CAACG,OAAO;MAACG,aAAa,EAAE+D,gBAAiB;MAAC9D,eAAe,EAAE,CAAC,CAAC6D;IAAc;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7EI,aAAa,iBACZpE,OAAA;MACEoD,KAAK,EAAE;QACLkB,QAAQ,EAAE,OAAO;QACjBC,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACP9D,KAAK,EAAE,MAAM;QACbqB,MAAM,EAAE,MAAM;QACd0C,eAAe,EAAE,oBAAoB;QACrCC,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBC,MAAM,EAAE;MACV,CAAE;MACFnB,OAAO,EAAEA,CAAA,KAAMW,gBAAgB,CAAC,IAAI,CAAE;MAAAf,QAAA,eAEtCtD,OAAA;QACE8E,GAAG,EAAEV,aAAa,CAAChC,GAAI;QACvB2C,GAAG,EAAC,UAAU;QACd3B,KAAK,EAAE;UACL4B,QAAQ,EAAE,KAAK;UACfC,SAAS,EAAE,KAAK;UAChBC,SAAS,EAAE;QACb,CAAE;QACFxB,OAAO,EAAEyB,CAAC,IAAIA,CAAC,CAACC,eAAe,CAAC,CAAE,CAAC;MAAA;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA,eACD,CAAC;AAEP;AAACG,GAAA,CApCuBD,GAAG;AAAAmB,GAAA,GAAHnB,GAAG;AAAA,IAAAD,EAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}