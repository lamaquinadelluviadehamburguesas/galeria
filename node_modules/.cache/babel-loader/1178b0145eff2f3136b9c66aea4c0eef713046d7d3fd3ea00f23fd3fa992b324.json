{"ast":null,"code":"import _objectSpread from \"F:/7edf24d0-a52d-4569-984b-9dc4f8b4f576/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"F:\\\\7edf24d0-a52d-4569-984b-9dc4f8b4f576\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport useMeasure from 'react-use-measure';\nimport { useTransition, a } from '@react-spring/web';\nimport { shuffle } from 'lodash';\nimport useMedia from './useMedia';\nimport data from './data';\nimport styles from './styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Masonry() {\n  _s();\n  // Hook1: Tie media queries to the number of columns\n  const columns = useMedia(['(min-width: 1500px)', '(min-width: 1000px)', '(min-width: 600px)'], [5, 4, 3], 2);\n  // Hook2: Measure the width of the container element\n  const [ref, {\n    width\n  }] = useMeasure();\n  // Hook3: Hold items\n  const [items, set] = useState(data);\n  const [hoveredItemKey, setHoveredItemKey] = useState(null);\n  // Hook4: shuffle data every 2 seconds\n  useEffect(() => {\n    const t = setInterval(() => set(shuffle), 2000);\n    return () => clearInterval(t);\n  }, []);\n  // Hook5: Form a grid of stacked items using width & columns we got from hooks 1 & 2\n  const [heights, gridItems] = useMemo(() => {\n    let heights = new Array(columns).fill(0); // Each column gets a height starting with zero\n    let gridItems = items.map((child, i) => {\n      const column = heights.indexOf(Math.min(...heights)); // Basic masonry-grid placing, puts tile into the smallest column using Math.min\n      const x = width / columns * column; // x = container width / number of columns * column index,\n      const y = (heights[column] += child.height / 2) - child.height / 2; // y = it's just the height of the current column\n      return _objectSpread(_objectSpread({}, child), {}, {\n        x,\n        y,\n        width: width / columns,\n        height: child.height / 2\n      });\n    });\n    return [heights, gridItems];\n  }, [columns, items, width]);\n  // Hook6: Turn the static grid values into animated transitions, any addition, removal or change will be animated\n  const transitions = useTransition(gridItems, {\n    key: item => item.css,\n    from: _ref => {\n      let {\n        x,\n        y,\n        width,\n        height\n      } = _ref;\n      return {\n        x,\n        y,\n        width,\n        height,\n        opacity: 0\n      };\n    },\n    enter: _ref2 => {\n      let {\n        x,\n        y,\n        width,\n        height\n      } = _ref2;\n      return {\n        x,\n        y,\n        width,\n        height,\n        opacity: 1\n      };\n    },\n    update: _ref3 => {\n      let {\n        x,\n        y,\n        width,\n        height\n      } = _ref3;\n      return {\n        x,\n        y,\n        width: item.css === hoveredItemKey ? width * 1.1 : width,\n        height: item.css === hoveredItemKey ? height * 1.1 : height\n      };\n    },\n    leave: {\n      height: 0,\n      opacity: 0\n    },\n    config: {\n      mass: 5,\n      tension: 500,\n      friction: 100\n    },\n    trail: 25\n  });\n  // Render the grid\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: styles.list,\n    style: {\n      height: Math.max(...heights)\n    },\n    children: transitions((style, item) => /*#__PURE__*/_jsxDEV(a.div, {\n      style: style,\n      onMouseEnter: () => setHoveredItemKey(item.css),\n      onMouseLeave: () => setHoveredItemKey(null),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundImage: \"url(\".concat(item.css, \")\")\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Masonry, \"21VW3boY4c+Ir3fq96mv+z0kAuY=\", false, function () {\n  return [useMedia, useMeasure, useTransition];\n});\n_c = Masonry;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(Masonry, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n}\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Masonry\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useMeasure","useTransition","a","shuffle","useMedia","data","styles","jsxDEV","_jsxDEV","Masonry","_s","columns","ref","width","items","set","hoveredItemKey","setHoveredItemKey","t","setInterval","clearInterval","heights","gridItems","Array","fill","map","child","i","column","indexOf","Math","min","x","y","height","_objectSpread","transitions","key","item","css","from","_ref","opacity","enter","_ref2","update","_ref3","leave","config","mass","tension","friction","trail","className","list","style","max","children","div","onMouseEnter","onMouseLeave","backgroundImage","concat","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_c2","$RefreshReg$"],"sources":["F:/7edf24d0-a52d-4569-984b-9dc4f8b4f576/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'\nimport useMeasure from 'react-use-measure'\nimport { useTransition, a } from '@react-spring/web'\nimport { shuffle } from 'lodash'\n\nimport useMedia from './useMedia'\nimport data from './data'\n\nimport styles from './styles.module.css'\n\nfunction Masonry() {\n  // Hook1: Tie media queries to the number of columns\n  const columns = useMedia(['(min-width: 1500px)', '(min-width: 1000px)', '(min-width: 600px)'], [5, 4, 3], 2)\n  // Hook2: Measure the width of the container element\n  const [ref, { width }] = useMeasure()\n  // Hook3: Hold items\n  const [items, set] = useState(data)\n  const [hoveredItemKey, setHoveredItemKey] = useState<string | null>(null);\n  // Hook4: shuffle data every 2 seconds\n  useEffect(() => {\n    const t = setInterval(() => set(shuffle), 2000)\n    return () => clearInterval(t)\n  }, [])\n  // Hook5: Form a grid of stacked items using width & columns we got from hooks 1 & 2\n  const [heights, gridItems] = useMemo(() => {\n    let heights = new Array(columns).fill(0) // Each column gets a height starting with zero\n    let gridItems = items.map((child, i) => {\n      const column = heights.indexOf(Math.min(...heights)) // Basic masonry-grid placing, puts tile into the smallest column using Math.min\n      const x = (width / columns) * column // x = container width / number of columns * column index,\n      const y = (heights[column] += child.height / 2) - child.height / 2 // y = it's just the height of the current column\n      return { ...child, x, y, width: width / columns, height: child.height / 2 }\n    })\n    return [heights, gridItems]\n  }, [columns, items, width])\n  // Hook6: Turn the static grid values into animated transitions, any addition, removal or change will be animated\n  const transitions = useTransition(gridItems, {\n    key: (item: { css: string; height: number }) => item.css,\n    from: ({ x, y, width, height }) => ({ x, y, width, height, opacity: 0 }),\n    enter: ({ x, y, width, height }) => ({ x, y, width, height, opacity: 1 }),\n    update: ({ x, y, width, height }) => ({\n      x,\n      y,\n      width: item.css === hoveredItemKey ? width * 1.1 : width,\n      height: item.css === hoveredItemKey ? height * 1.1 : height,\n    }),\n    leave: { height: 0, opacity: 0 },\n    config: { mass: 5, tension: 500, friction: 100 },\n    trail: 25,\n  })\n  // Render the grid\n  return (\n    <div ref={ref} className={styles.list} style={{ height: Math.max(...heights) }}>\n      {transitions((style, item) => (\n        <a.div\n          style={style}\n          onMouseEnter={() => setHoveredItemKey(item.css)}\n          onMouseLeave={() => setHoveredItemKey(null)}\n        >\n          <div style={{ backgroundImage: `url(${item.css})` }} />\n        </a.div>\n      ))}\n    </div>\n  )\n}\n\nexport default function App() {\n  return <Masonry />\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}